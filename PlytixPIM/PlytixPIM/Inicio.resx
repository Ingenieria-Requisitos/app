<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAASUSURBVGhD7ZpJzJ1TGMc/1BSE0iKGGFaqpaKJtHuiJOaV
        YtnoqiibbhArbVi1qBALq8bSUMPCkIiZ0IihhkhRYkgTiZqH3+/Gk5y89x3OOfd+n5L+k1+++957nvc8
        957peZ73m9mn/7GOgkthIzwG78O38NM/+Po9eBRscwkcCXuFDoZr4Cn4Hf4qRJsnYRV4rznXIbAOvoRw
        6md4Hm6DK2AxHAO2FV8vgSvBNi/ALxD2X8CNYNs50UXwMYQDb8L1MB9KpY22b0Hc7yO4EGZN/lL3QnRo
        5ythGtoP/IHehrj/Jpj6dDsO3gA72AM3wAEwbc2Dm8DNwb5eg2NhKjoVHG5v/AGcBX1aBOvhOfgE/OI/
        wqfwMKyAIS2FHWCf/tWHieRIxJd4BVywXVoAD8EfYPsu/oQ7wPZ98vNXQRu/TPXIuCZiOr0Mh0OX7ORd
        SB0e4je4Hw6DLtlnfBmnWdWauQ+8gdOpbyT2hxchdbIEbQ+CLjkyMc02+0aJLgYNnd9Da+IqSB2r4Rbo
        0zkQG0D21nwouEg1WusbAzIcSZ2q4TMYkruZbR2drCl2M2jgOTG0xbr//wCpU7WcDn1ya34HbOv23ysX
        eIQdOUO4EFJnJuF8GFJMecOZ3lG5FmzobpWj4yF1ZhIuhyE5AyKcudo3uvQM2Gj16GpYbrupM5OQu4jX
        gO23ja5aZABnWG0Ua26RoyPAA67pVA1nQI6OBqNmz6HWfMah9YbPjq7ytROaTpViNFASvpsCaGdyNqa7
        wA9vHV3lyyFOnaphO5TodtDOTHNMj4MfXja6ytc9kDpVgzFaiUzctDNtHlOEAUavuTI8+QpSp2rYBd4r
        V2af2hk+jel78EMXU65smzo0CSX9xvn1zeiqocif+wK4pg4E47HUoRrcKUsiW9uG3ZhqvoiygpI6VYOV
        lBLFF9HnMdVMLbUMzABTx0rQ9lwokaG9tt+NrhqKxZ57MKWKXaQGbUt1JmjbutjjPCjdfpVD7cJLHczh
        ayidyioOb4+MMd0Nflh6IIZMjlInc7DIVyMLfNq3Hoi1IUrIHex1SB3twxzcHKNGVjS9R2uIYl5uIFYS
        NDZ1EjQd7uJEqFEEjb9Cp59Pg53khvFNOSpNh7uoHQ1LrNo/Mbrq0HVgI5OXGlm+SZ3to6+81KU0sfIp
        QKfcfSLVranrngaps33YtlSR6n4Og7td7D4WlEuG37Km1cjU2T4s+p0CudIXw31tffwwKEclykE5BufB
        A1BzumvzICyHIblVa+PBnX32OISmsBbFzvaNhgwRrHmljwEmxV/b2lVbjTcKdPpUPOWjZPohRMHZKvlW
        iABzNnBbfQR0XhmyRyHdZybFsuIYBWTns5ngUKV9mtjXFoh19xJUP5azbuVzjWYnc41r1kccE+lkiKH9
        N/CHrNmqW3UClGyt08Lp5KyYqpyfztlpFeT6sA/XpEfBrMntbzbXjY++L4A5kb+Ue75lnDZnajA08nFB
        TaI1sezUf7+wAOH+3+ZgH55HFh6srBs57xWyCG5ytgFMm/0Hmt0QTvva9/zsTjClrvlviX36D2hm5m8c
        c4TRkeiISgAAAABJRU5ErkJggg==
</value>
  </data>
</root>